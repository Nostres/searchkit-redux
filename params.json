{
  "name": "Searchkit-redux",
  "tagline": "React UI components / widgets. The easiest way to build a great search experience with Elasticsearch.",
  "body": "## SearchKit-Redux\r\nThis is a forked Searckit@v0.10.0 with Redux and Immutable.js\r\nThis version has some Redux capabilities and allows anyone to import a \"SearchKitReducer\" and in return add to your store's state tree the following structure:\r\n```json\r\n{\r\n  \"viewSwitcher\": {\r\n    \"currentView\": \"table\",\r\n  },\r\n  \"items\": {\r\n    \"displayed\": [{}, {}, {}],\r\n    \"query\": {},\r\n  }\r\n}\r\n```\r\n\r\n### Adding the SearchKitReducer to your store\r\n```javascript\r\nimport { combineReducers } from 'redux-immutable'\r\nimport * as SearchKit from 'searchkit' // eslint-disable-line\r\n\r\nconst YourReducer = combineReducers({\r\n  filter: SearchKitReducer,\r\n  more: () => {},\r\n})\r\n\r\nexport default YourReducer\r\n\r\n```\r\n\r\n### Using the ViewSwitcher with Redux mappings\r\nJust import ViewSwitcherToggleContainer instead of ViewSwitcherToggle\r\n\r\n```javascript\r\nimport { ViewSwitcherToggleContainer } from 'searchkit'\r\n```\r\n\r\n## Breaking Changes\r\nFrom now on when you use the property 'highlightFields'\r\ninstead of passing an Array of Strings:\r\n\r\n```javascript\r\n<Hits            \r\n  highlightFields={['title', 'body']}\r\n>\r\n```\r\n\r\nyou will have to pass an Array of Objects, exactly like elasticsearch likes it.\r\n\r\n```javascript\r\n<Hits            \r\n  highlightFields={{\r\n    fields: {\r\n      'title': {\r\n        number_of_fragments: 0,\r\n      },\r\n      'result.domain': {\r\n        number_of_fragments: 0,\r\n      },\r\n    },\r\n  }}\r\n>\r\n```\r\n\r\nThis will allow you to pass highlighting options per field.\r\n\r\n## What is Searchkit?\r\nSearchkit is a suite of UI components built in react. The aim is to rapidly create beautiful search applications using declarative components, and without being an ElasticSearch expert.\r\n\r\n<img src=\"./docs/assets/codepreview.png\"/>\r\n\r\n[<img src=\"https://circleci.com/gh/searchkit/searchkit.png?style=shield\"/>](https://circleci.com/gh/searchkit/searchkit)\r\n[![npm version](https://badge.fury.io/js/searchkit.svg)](https://badge.fury.io/js/searchkit)\r\n[![Join the chat at https://gitter.im/searchkit/searchkit](https://badges.gitter.im/searchkit/searchkit.svg)](https://gitter.im/searchkit/searchkit?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[![Coverage Status](https://coveralls.io/repos/searchkit/searchkit/badge.svg?branch=develop&service=github)](https://coveralls.io/github/searchkit/searchkit?branch=develop)\r\n\r\nSee full [Documentation](http://docs.searchkit.co/stable) or [Getting Started](http://docs.searchkit.co/stable/docs/setup/project-setup.html)\r\n\r\n## Quick Intro\r\n[Live demo](http://demo.searchkit.co)\r\n\r\n```jsx\r\nconst searchkit = new SearchkitManager(\"http://demo.searchkit.co/api/movies/\")\r\n\r\n\r\nconst App = ()=> (\r\n  <SearchkitProvider searchkit={searchkit}>\r\n    <Layout>\r\n      <TopBar>\r\n        <SearchBox\r\n          autofocus={true}\r\n          searchOnChange={true}\r\n          prefixQueryFields={[\"actors^1\",\"type^2\",\"languages\",\"title^10\"]}/>\r\n      </TopBar>\r\n      <LayoutBody>\r\n        <SideBar>\r\n          <HierarchicalMenuFilter\r\n            fields={[\"type.raw\", \"genres.raw\"]}\r\n            title=\"Categories\"\r\n            id=\"categories\"/>\r\n          <RefinementListFilter\r\n            id=\"actors\"\r\n            title=\"Actors\"\r\n            field=\"actors.raw\"\r\n            operator=\"AND\"\r\n            size={10}/>\r\n        </SideBar>\r\n        <LayoutResults>\r\n          <ActionBar>\r\n\r\n            <ActionBarRow>\r\n              <HitsStats/>\r\n            </ActionBarRow>\r\n\r\n            <ActionBarRow>\r\n              <SelectedFilters/>\r\n              <ResetFilters/>\r\n            </ActionBarRow>\r\n\r\n          </ActionBar>\r\n          <Hits mod=\"sk-hits-grid\" hitsPerPage={10} itemComponent={MovieHitsGridItem}\r\n            sourceFilter={[\"title\", \"poster\", \"imdbId\"]}/>\r\n          <NoHits/>\r\n        </LayoutResults>\r\n      </LayoutBody>\r\n    </Layout>\r\n  </SearchkitProvider>\r\n)\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n\r\n\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}